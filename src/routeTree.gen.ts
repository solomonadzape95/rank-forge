/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SignupImport } from './routes/signup'
import { Route as RanksImport } from './routes/ranks'
import { Route as ProfileImport } from './routes/profile'
import { Route as LoginImport } from './routes/login'
import { Route as LogImport } from './routes/log'
import { Route as LeaderboardImport } from './routes/leaderboard'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as ContributorsImport } from './routes/contributors'
import { Route as ContributionsImport } from './routes/contributions'
import { Route as AdminImport } from './routes/admin'
import { Route as IndexImport } from './routes/index'
import { Route as DemoTanstackQueryImport } from './routes/demo.tanstack-query'
import { Route as DemoTableImport } from './routes/demo.table'

// Create/Update Routes

const SignupRoute = SignupImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any)

const RanksRoute = RanksImport.update({
  id: '/ranks',
  path: '/ranks',
  getParentRoute: () => rootRoute,
} as any)

const ProfileRoute = ProfileImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LogRoute = LogImport.update({
  id: '/log',
  path: '/log',
  getParentRoute: () => rootRoute,
} as any)

const LeaderboardRoute = LeaderboardImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const ContributorsRoute = ContributorsImport.update({
  id: '/contributors',
  path: '/contributors',
  getParentRoute: () => rootRoute,
} as any)

const ContributionsRoute = ContributionsImport.update({
  id: '/contributions',
  path: '/contributions',
  getParentRoute: () => rootRoute,
} as any)

const AdminRoute = AdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DemoTanstackQueryRoute = DemoTanstackQueryImport.update({
  id: '/demo/tanstack-query',
  path: '/demo/tanstack-query',
  getParentRoute: () => rootRoute,
} as any)

const DemoTableRoute = DemoTableImport.update({
  id: '/demo/table',
  path: '/demo/table',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/admin': {
      id: '/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminImport
      parentRoute: typeof rootRoute
    }
    '/contributions': {
      id: '/contributions'
      path: '/contributions'
      fullPath: '/contributions'
      preLoaderRoute: typeof ContributionsImport
      parentRoute: typeof rootRoute
    }
    '/contributors': {
      id: '/contributors'
      path: '/contributors'
      fullPath: '/contributors'
      preLoaderRoute: typeof ContributorsImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardImport
      parentRoute: typeof rootRoute
    }
    '/log': {
      id: '/log'
      path: '/log'
      fullPath: '/log'
      preLoaderRoute: typeof LogImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileImport
      parentRoute: typeof rootRoute
    }
    '/ranks': {
      id: '/ranks'
      path: '/ranks'
      fullPath: '/ranks'
      preLoaderRoute: typeof RanksImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupImport
      parentRoute: typeof rootRoute
    }
    '/demo/table': {
      id: '/demo/table'
      path: '/demo/table'
      fullPath: '/demo/table'
      preLoaderRoute: typeof DemoTableImport
      parentRoute: typeof rootRoute
    }
    '/demo/tanstack-query': {
      id: '/demo/tanstack-query'
      path: '/demo/tanstack-query'
      fullPath: '/demo/tanstack-query'
      preLoaderRoute: typeof DemoTanstackQueryImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contributions': typeof ContributionsRoute
  '/contributors': typeof ContributorsRoute
  '/dashboard': typeof DashboardRoute
  '/leaderboard': typeof LeaderboardRoute
  '/log': typeof LogRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/ranks': typeof RanksRoute
  '/signup': typeof SignupRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contributions': typeof ContributionsRoute
  '/contributors': typeof ContributorsRoute
  '/dashboard': typeof DashboardRoute
  '/leaderboard': typeof LeaderboardRoute
  '/log': typeof LogRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/ranks': typeof RanksRoute
  '/signup': typeof SignupRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/admin': typeof AdminRoute
  '/contributions': typeof ContributionsRoute
  '/contributors': typeof ContributorsRoute
  '/dashboard': typeof DashboardRoute
  '/leaderboard': typeof LeaderboardRoute
  '/log': typeof LogRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/ranks': typeof RanksRoute
  '/signup': typeof SignupRoute
  '/demo/table': typeof DemoTableRoute
  '/demo/tanstack-query': typeof DemoTanstackQueryRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/admin'
    | '/contributions'
    | '/contributors'
    | '/dashboard'
    | '/leaderboard'
    | '/log'
    | '/login'
    | '/profile'
    | '/ranks'
    | '/signup'
    | '/demo/table'
    | '/demo/tanstack-query'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/admin'
    | '/contributions'
    | '/contributors'
    | '/dashboard'
    | '/leaderboard'
    | '/log'
    | '/login'
    | '/profile'
    | '/ranks'
    | '/signup'
    | '/demo/table'
    | '/demo/tanstack-query'
  id:
    | '__root__'
    | '/'
    | '/admin'
    | '/contributions'
    | '/contributors'
    | '/dashboard'
    | '/leaderboard'
    | '/log'
    | '/login'
    | '/profile'
    | '/ranks'
    | '/signup'
    | '/demo/table'
    | '/demo/tanstack-query'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AdminRoute: typeof AdminRoute
  ContributionsRoute: typeof ContributionsRoute
  ContributorsRoute: typeof ContributorsRoute
  DashboardRoute: typeof DashboardRoute
  LeaderboardRoute: typeof LeaderboardRoute
  LogRoute: typeof LogRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  RanksRoute: typeof RanksRoute
  SignupRoute: typeof SignupRoute
  DemoTableRoute: typeof DemoTableRoute
  DemoTanstackQueryRoute: typeof DemoTanstackQueryRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AdminRoute: AdminRoute,
  ContributionsRoute: ContributionsRoute,
  ContributorsRoute: ContributorsRoute,
  DashboardRoute: DashboardRoute,
  LeaderboardRoute: LeaderboardRoute,
  LogRoute: LogRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  RanksRoute: RanksRoute,
  SignupRoute: SignupRoute,
  DemoTableRoute: DemoTableRoute,
  DemoTanstackQueryRoute: DemoTanstackQueryRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/admin",
        "/contributions",
        "/contributors",
        "/dashboard",
        "/leaderboard",
        "/log",
        "/login",
        "/profile",
        "/ranks",
        "/signup",
        "/demo/table",
        "/demo/tanstack-query"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/admin": {
      "filePath": "admin.tsx"
    },
    "/contributions": {
      "filePath": "contributions.tsx"
    },
    "/contributors": {
      "filePath": "contributors.tsx"
    },
    "/dashboard": {
      "filePath": "dashboard.tsx"
    },
    "/leaderboard": {
      "filePath": "leaderboard.tsx"
    },
    "/log": {
      "filePath": "log.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/profile": {
      "filePath": "profile.tsx"
    },
    "/ranks": {
      "filePath": "ranks.tsx"
    },
    "/signup": {
      "filePath": "signup.tsx"
    },
    "/demo/table": {
      "filePath": "demo.table.tsx"
    },
    "/demo/tanstack-query": {
      "filePath": "demo.tanstack-query.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
